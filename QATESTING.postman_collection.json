{
	"info": {
		"_postman_id": "28d25e09-2c80-4fb2-85e7-20a6a3a90a24",
		"name": "QATESTING Service Orchestrator E-Payments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38162381",
		"_collection_link": "https://gluon-consulting.postman.co/workspace/Aboitiz-Power-MobileAP~719b6210-b8f4-42e3-855d-efe9811fd703/collection/38162381-28d25e09-2c80-4fb2-85e7-20a6a3a90a24?action=share&source=collection_link&creator=38162381"
	},
	"item": [
		{
			"name": "Bill E-Payment TESTING( please do not delete)",
			"item": [
				{
					"name": "Login with Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"if (jsonData.response != null) {\r",
									"    pm.environment.set(\"access_token\", jsonData.response.accessToken);\r",
									"    pm.environment.set(\"refresh_token\", jsonData.response.refreshToken);\r",
									"}\r",
									"\r",
									"const response = pm.response.json();\r",
									"pm.collectionVariables.set(\"auth_token\", response.response.accessToken);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if auth_token exists in the environment variable",
									"if (pm.environment.get(\"auth_token\")) {",
									"    // Skip the login request if auth_token is present",
									"    pm.setNextRequest(null); // This will skip the current request (which should be the login request)",
									"}",
									"const crypto = require('crypto-js');",
									"const rawData = pm.request.body.toString();",
									"const strippedData = rawData.replace(",
									"    /\\\\\"|\"(?:\\\\\"|[^\"])*\"|(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/g,",
									"    (m, g) => g ? \"\" : m",
									");",
									"let json = JSON.parse(strippedData);",
									"let password = json.password;",
									"let hash = crypto.SHA256(password).toString();",
									"json.password = hash;",
									"pm.request.body.raw = JSON.stringify(json);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "login",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{static_token_login}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"apitester515@gmail.com\", // (Required) Either filled with username / email address, with same key \"username\"\r\n    \"password\": \"Admin@123\", // (Required) \r\n    \"userDevice\": {\r\n        \"type\": \"SmartPhone\", // (Required) SmartPhone / Tablet / Web / Other\r\n        \"model\": \"sdk_gphone_x86_arm\", // (Required) Phone model\r\n        \"deviceIdentifier\": \"11111\", // (Required) Unique string from android / ios SDK\r\n        \"platform\": \"Android\", // (Required) Android / Ios / Api\r\n        \"appVersion\": \"2.3.0+431\", // (Required) Only for analytic purposes\r\n        \"appName\": \"endUser\" // (Required) Hardcoded to \"endUser\" for MobileAP\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"login"
							]
						},
						"description": "Login with username (only valid for users before SSO registration was introduced), or email address (for all users)\n\nNote:\n\n1. password will be encrypted before sent (see Pre-request script)\n    \n2. response will be parsed and put into environment variables (see Post-response script)"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"legacyuser0\",\r\n    \"password\": \"123456\",\r\n    \"userDevice\": {\r\n        \"type\": \"SmartPhone\",\r\n        \"model\": \"sdk_gphone_x86_arm\",\r\n        \"deviceIdentifier\": \"11111\",\r\n        \"platform\": \"Android\",\r\n        \"appVersion\": \"2.3.0+431\",\r\n        \"appName\": \"endUser\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 10 Jun 2024 03:27:47 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "688"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "cache-control",
									"value": "no-store"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "pragma",
									"value": "no-store"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "server",
									"value": "conduit/1"
								}
							],
							"cookie": [],
							"body": "{\n    \"responder-id\": \"756421c1-1550-4d53-8882-2954c8585a0e_1\",\n    \"responder\": \"APDU MobileAP Service Orchestrator UAT\",\n    \"service-name\": \"LoginWithPasswordImpl\",\n    \"service-version\": \"3.0.0+900\",\n    \"response-timestamp\": \"2024-06-10T03:27:47.496331Z\",\n    \"success\": true,\n    \"response\": {\n        \"accessToken\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpdiI6Imtxam5lSjljeVF5VjF6dCswTldva1E9PSIsInVzZXJJZCI6IlJVQ1dyUm1ZWnNuSzNrS3VrKzRPNEE9PSIsImRldmljZUlkIjoiUm55dnJ4dWFaTXZJM0VDc2tld000Zz09IiwidXNlcm5hbWUiOiJsZWdhY3l1c2VyMCIsImRldmljZVR5cGUiOiJTbWFydFBob25lIiwiZGV2aWNlTW9kZWwiOiJzZGtfZ3Bob25lX3g4Nl9hcm0iLCJkZXZpY2VJZGVudGlmaWVyIjoiazNaRHd3MVZwZkswTVZ4YVNybXQiLCJkZXZpY2VQbGF0Zm9ybSI6IkFuZHJvaWQiLCJhcHBWZXJzaW9uIjoiMi4zLjArNDMxIiwiYXBwTmFtZSI6ImVuZFVzZXIifQ.30C2g8L8BjU5FC3JCX96bMwXKx-qxs_ECECSnDgkzok\",\n        \"validUntil\": \"2024-06-10T03:57:47.433280\",\n        \"refreshToken\": \"tTa2kQfAnrscybr589EFeItF9TNY08CA\",\n        \"securityToken\": \"N/Em/pfve97KTdR07tV0iZl/ebgo9oUfdqsuYu1o1c7YtZTeO8ASKd112PKoZYxg\"\n    }\n}"
						}
					]
				},
				{
					"name": "Pay from Bank Channel",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Add delay of 5 seconds (5000 milliseconds) between iterations\r",
									"setTimeout(function() {\r",
									"}, 5000);  // 5000ms = 5 seconds\r",
									"\r",
									"\r",
									"// Store the data in the collection variable per iteration from json file\r",
									"pm.collectionVariables.set(\"du_code\", pm.iterationData.get(\"duCode\"));\r",
									"pm.collectionVariables.set(\"account_number\", pm.iterationData.get(\"accountNumber\"));\r",
									"pm.collectionVariables.set(\"amount\", pm.iterationData.get(\"amount\"));\r",
									"pm.collectionVariables.set(\"payment_channel_Code\", pm.iterationData.get(\"paymentChannelCode\"));\r",
									"pm.collectionVariables.set(\"paymentChannelImplementationVersion\", pm.iterationData.get(\"paymentChannelImplementationVersion\"));\r",
									"pm.collectionVariables.set(\"label\", pm.iterationData.get(\"label\"));\r",
									"\r",
									"//channelsetroutes\r",
									"pm.collectionVariables.set(\"route_id\", pm.iterationData.get(\"id\"));\r",
									"pm.collectionVariables.set(\"route_enable\", pm.iterationData.get(\"enabled\")); \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(`Status code is 200 for ${pm.collectionVariables.get(\"label\")}`, function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"    \r",
									"    //  Assert the \"success\" field is true\r",
									"    pm.expect(jsonData.success).to.be.true;\r",
									"\r",
									"    // Assert \"transaction-id\" exists and is not empty\r",
									"    pm.expect(jsonData.response[\"transaction-id\"]).to.be.a('string').and.not.be.empty;\r",
									"\r",
									"    //  Assert \"payee\" details in response are correct\r",
									"    pm.expect(jsonData.response.payee.id).to.eql(663);\r",
									"    pm.expect(jsonData.response.payee[\"full-name\"]).to.eql(\"Owner, Qa Tester A\");\r",
									"    pm.expect(jsonData.response.payee[\"phone-number\"]).to.eql(\"9269497828\");\r",
									"    pm.expect(jsonData.response.payee[\"email-address\"]).to.eql(\"apitester515@gmail.com\");\r",
									"\r",
									"    // Assert that \"du-code\" in response is correct\r",
									"    pm.expect(jsonData.response[\"du-code\"]).to.eql(pm.collectionVariables.get(\"du_code\"));\r",
									"\r",
									"    // Assert that \"du-account-number\" in response is correct\r",
									"    pm.expect(jsonData.response[\"du-account-number\"]).to.eql(pm.collectionVariables.get(\"account_number\"));\r",
									"\r",
									"    // Assert \"payment-amount-before-fees\" in response is correct\r",
									"    pm.expect(jsonData.response[\"payment-amount-before-fees\"]).to.eql(pm.collectionVariables.get(\"amount\"));\r",
									"\r",
									"    // Assert \"fees-amount\" and \"total-amount\" are correct based on bank fees\r",
									"    const amount = parseFloat(pm.collectionVariables.get(\"amount\"));\r",
									"    let expectedFee;\r",
									"    \r",
									"    // Bank-dependent logic for fees\r",
									"    const bankId = jsonData.response[\"payment-channel\"].id;\r",
									"    const provider = jsonData.response[\"payment-provider\"].id;\r",
									"\r",
									"    \r",
									"    if (provider === \"BUX\" || provider === \"MAYA\") {\r",
									"        if ([\"BDOU\", \"MBTC\", \"LBPH\"].includes(bankId)) {\r",
									"            expectedFee = 7; // 7 pesos for BDO, Metrobank, and Landbank\r",
									"        } else if ([\"BPIA\", \"RCBC\", \"UBPB\"].includes(bankId)) {\r",
									"            expectedFee = 5; // 5 pesos for BPIA, RCBC, and UBPB\r",
									"        } else if ([\"GCSH\"].includes(bankId)) {\r",
									"            expectedFee = 30; // 30 pesos for GCash\r",
									"        } else if ([\"MAYA\"].includes(bankId)) {\r",
									"            expectedFee = 10; // 10 pesos for Maya\r",
									"        } else {\r",
									"            pm.expect.fail(`Unexpected bank ID: ${bankId}. No fee defined for this bank.`);\r",
									"            return;\r",
									"        }\r",
									"    } else if (provider === \"PMG\") {\r",
									"        if ([\"BPIA\", \"UBPB\"].includes(bankId)) {\r",
									"            expectedFee = 7;\r",
									"        } else {\r",
									"            pm.expect.fail(`Unexpected bank ID: ${bankId}. No fee defined for this bank.`);\r",
									"            return;\r",
									"        }\r",
									"    } \r",
									"\r",
									"    const expectedTotal = amount + expectedFee;\r",
									"    pm.expect(parseFloat(jsonData.response[\"total-amount\"])).to.eql(expectedTotal);\r",
									"\r",
									"    //  Assert the status is \"PendingUser\"\r",
									"    pm.expect(jsonData.response.status).to.eql(\"PendingUser\");\r",
									"\r",
									"    // Assert \"user-flow-url\" starts with https\r",
									"    pm.expect(jsonData.response[\"user-flow-url\"].startsWith(\"https\")).to.be.true;\r",
									"\r",
									"    // Set \"transaction-id\" as a collection variable\r",
									"    pm.collectionVariables.set(\"TransactionID\", jsonData.response[\"transaction-id\"]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"duCode\": \"{{du_code}}\",\r\n    \"accountNumber\": \"{{account_number}}\",\r\n    \"amount\": \"{{amount}}\",\r\n    \"paymentChannelCode\": \"{{payment_channel_Code}}\",\r\n    \"paymentChannelImplementationVersion\": \"{{paymentChannelImplementationVersion}}\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/e-payment/channel/pay",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"e-payment",
								"channel",
								"pay"
							]
						},
						"description": "Pay using bank online"
					},
					"response": [
						{
							"name": "Failed: Payment Already Started",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"duCode\": \"VECO\",\r\n    \"accountNumber\": \"99555155706\",\r\n    \"amount\": \"50\",\r\n    \"channel\": \"BPIA\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/e-payment/channel/pay",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"e-payment",
										"channel",
										"pay"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "291"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "server",
									"value": "conduit/1"
								}
							],
							"cookie": [],
							"body": "{\n    \"responder-id\": \"945dc32e-6eb4-48f2-bdbf-1bc8bb006535_1\",\n    \"responder\": \"APDU MobileAP Service Orchestrator UAT\",\n    \"service-name\": \"payBillFromChannel\",\n    \"service-version\": \"2.2.0+318\",\n    \"response-timestamp\": \"2022-08-08T07:47:44.849238Z\",\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An existing payment transaction has already been started. Please complete the pending transaction before creating a new one.\"\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"duCode\": \"VECO\",\r\n    \"accountNumber\": \"99555155706\",\r\n    \"amount\": \"50\",\r\n    \"channel\": \"BPIA\",\r\n    \"providerCode\": \"BUX\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/e-payment/channel/pay",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"e-payment",
										"channel",
										"pay"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "cache-control",
									"value": "no-store"
								},
								{
									"key": "access-control-allow-origin",
									"value": "https://mobileap.aboitizpower.com"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "677"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "pragma",
									"value": "no-store"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "server",
									"value": "conduit/1"
								}
							],
							"cookie": [],
							"body": "{\n    \"responder-id\": \"9e93a427-94cc-40f0-9762-889be9ab0b22_1\",\n    \"responder\": \"APDU MobileAP Service Orchestrator UAT\",\n    \"service-name\": \"payBillFromChannel\",\n    \"service-version\": \"2.2.0+318\",\n    \"response-timestamp\": \"2022-11-24T04:36:54.594048Z\",\n    \"success\": true,\n    \"response\": {\n        \"id\": \"308\",\n        \"paymentId\": \"\",\n        \"duCode\": \"VECO\",\n        \"accountNumber\": \"99555155706\",\n        \"orNumber\": \"\",\n        \"paymentAmount\": \"50\",\n        \"providerFee\": \"15\",\n        \"paymentAgent\": \"BUX\",\n        \"paymentBranch\": \"BPIA\",\n        \"paymentMadeDate\": \"2022-11-24T04:36:51.521014Z\",\n        \"paymentProcessedDate\": null,\n        \"paymentStatus\": \"started\",\n        \"paymentType\": \"checkoutUrl\",\n        \"requestId\": \"f0f4e0dc-5067-431c-9689-4990d2f08fe9\",\n        \"refCode\": \"BPIA86554\",\n        \"urlExpiredDate\": \"2022-11-24T04:46:54.373123Z\",\n        \"paymentUrl\": \"https://app.bux.ph/test/bux_payment/0d6eb0d17c3e4692b940a1386ddd5ec0\",\n        \"checkUrl\": \"https://app.bux.ph/test/payment/0d6eb0d17c3e4692b940a1386ddd5ec0/\",\n        \"userGenerator\": {\n            \"id\": 11,\n            \"username\": \"ihutef\",\n            \"firstName\": \"John\",\n            \"middleNameInitial\": \"M\",\n            \"lastName\": \"Doe\",\n            \"gender\": \"Male\",\n            \"dateOfBirth\": \"1990-07-01T00:00:00.000Z\",\n            \"profilePicture\": \"\",\n            \"isActive\": true,\n            \"pinDigitCount\": 6,\n            \"walletEmail\": \"ihutef_11@mobileap.integration\",\n            \"createdTimestamp\": \"2022-10-31T06:03:05.445812Z\",\n            \"lastModifiedTimestamp\": \"2022-11-16T04:28:10.811614Z\"\n        },\n        \"lastModifiedTimestamp\": \"2022-11-24T04:36:51.521014Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "Cancel  Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Add delay of 5 seconds (5000 milliseconds) between iterations\r",
									"setTimeout(function() {\r",
									"}, 5000);  // 5000ms = 5 seconds\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{TransactionID}} \"// payment ID\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/e-payment/cancel",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"e-payment",
								"cancel"
							]
						},
						"description": "This API is for canceling e-payment that was created before"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1730\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/e-payment/cancel",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"e-payment",
										"cancel"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "cache-control",
									"value": "no-store"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "494"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "pragma",
									"value": "no-store"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "server",
									"value": "conduit/1"
								}
							],
							"cookie": [],
							"body": "{\n    \"responder-id\": \"ea54bda0-7a29-4775-b871-d170cce46482_1\",\n    \"responder\": \"APDU MobileAP Service Orchestrator UAT\",\n    \"service-name\": \"cancelEPayment\",\n    \"service-version\": \"2.3.0+354\",\n    \"response-timestamp\": \"2023-02-16T01:41:39.273421Z\",\n    \"success\": true,\n    \"response\": {\n        \"id\": \"1730\",\n        \"paymentId\": \"\",\n        \"duCode\": \"VECO\",\n        \"accountNumber\": \"99555155706\",\n        \"orNumber\": \"\",\n        \"paymentAmount\": \"50\",\n        \"providerFee\": \"15\",\n        \"paymentAgent\": \"UBX\",\n        \"paymentBranch\": \"BPIA\",\n        \"paymentMadeDate\": \"2023-02-16T01:41:28.469815Z\",\n        \"paymentProcessedDate\": null,\n        \"paymentStatus\": \"canceled\",\n        \"paymentType\": \"checkoutUrl\",\n        \"requestId\": \"BUX_BPIAA9E61C0D31BA4FE3B4C5AAD9560FE937\",\n        \"refCode\": \"BPIA92097\",\n        \"urlExpiredDate\": \"2023-02-16T01:51:32.549508Z\",\n        \"paymentUrl\": \"https://app.bux.ph/test/bux_payment/440194d0ccbc4cff8924899c81b3a613\",\n        \"checkUrl\": \"https://app.bux.ph/test/payment/440194d0ccbc4cff8924899c81b3a613/\",\n        \"userGenerator\": null\n    }\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "du_code",
			"value": "VECO",
			"type": "string"
		},
		{
			"key": "account_number",
			"value": "61404839971",
			"type": "string"
		},
		{
			"key": "amount",
			"value": "93",
			"type": "string"
		},
		{
			"key": "payment_channel_Code",
			"value": "BPIA",
			"type": "string"
		},
		{
			"key": "paymentChannelImplementationVersion",
			"value": "1",
			"type": "string"
		},
		{
			"key": "label",
			"value": "VECO SME Minimum Amount BDO",
			"type": "string"
		},
		{
			"key": "TransactionID",
			"value": ""
		},
		{
			"key": "auth_token",
			"value": ""
		}
	]
}